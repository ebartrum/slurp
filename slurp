#!/usr/bin/env python

import os
import argparse
import itertools
import sys
import submitit
import re

def expand_single_multiword(command):
    word_list = command.split(" ")
    multiword_index = [is_multiword(w) for w in word_list].index(True)
    multiword = word_list[multiword_index]
    multiword_options = multiword[1:-1].split(",")
    out = []
    for option in multiword_options:
        expanded_command_word_list = word_list
        expanded_command_word_list[multiword_index] = option
        expanded_command = " ".join(expanded_command_word_list)
        out.append(expanded_command)
    return out

def is_multiword(word):
    #a multiword is enclosed by []
    enclosed_left = word[0]=='['
    enclosed_right = word[-1]==']'
    return enclosed_left and enclosed_right

def is_multicommand(command):
    word_list = command.split(" ")
    return any(map(is_multiword, word_list))

def expand_command_list(command_list):
    if not any(map(is_multicommand,command_list)):
        return command_list
    else:
        index = [is_multicommand(c) for c in command_list].index(True)
        multicommand = command_list[index]
        new = expand_single_multiword(multicommand)
        expanded = command_list[:index] + new + command_list[index+1:]
        return expand_command_list(expanded)

def get_command_list(command):
    command = remove_whitespace_inside_brackets(command)
    return expand_command_list([command])

def remove_whitespace_inside_brackets(str):
    return re.sub(r'\[.*?\]', lambda x: ''.join(x.group(0).split()), str)

#we separate the cli args into slurp arguments and the command.
#for now, the first non-flag argument indicates the command.
args = sys.argv[1:]
command_start_index = [a[0] != '-' for a in args].index(True)
slurp_args = args[:command_start_index]
command = " ".join(args[command_start_index:])

if "-d" in slurp_args:
    partition="devel"
    time=60
else:
    partition="small"
    time=60*24*3

command_list = get_command_list(command)
print(f"Submitting job array with following {len(command_list)} expts")
for com in command_list:
    print(com)
print("-------------------------------------------")

executor = submitit.AutoExecutor(folder=".submitit_logs")
executor.update_parameters(timeout_min=time, slurm_partition=partition,
        slurm_gres="gpu:1")

jobs = []
with executor.batch():
    for command in command_list:
        job = executor.submit(os.system, command)
        jobs.append(job)

outputs = [job.result() for job in jobs]
errors = [job.stderr() for job in jobs]
logs = [job.stdout() for job in jobs]
print("Job output: \n")
print(logs[0])
print("Job error: \n")
print(errors[0])
