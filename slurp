#!/usr/bin/env python

import os
import argparse
import itertools
import sys
import submitit

def get_command_list(input):
    words = input.split(" ")
    shared_command = ' '.join(filter(lambda w: '=' not in w, words))
    sweep_dict = {}
    for word in words:
        if '=' in word:
            assert len(word.split('=')) == 2
            arg_name = word.split('=')[0]
            value_list = word.split('=')[1].split(',')
            sweep_dict[arg_name] = value_list
    arg_assignment_sweep_list = []
    for k,v in sweep_dict.items():
        arg_assignment_sweep_list.append([f"{k}={val}" for val in v])

    command_list = []
    for element in itertools.product(*arg_assignment_sweep_list):
        command_list.append(shared_command + " " + " ".join(element))
    return command_list

#we separate the cli args into slurp arguments and the command.
#for now, the first non-flag argument indicates the command.
args = sys.argv[1:]
command_start_index = [a[0] != '-' for a in args].index(True)
slurp_args = args[:command_start_index]
command = " ".join(args[command_start_index:])

if "-d" in slurp_args:
    partition="devel"
    time=60
else:
    partition="small"
    time=60*24*3

command_list = get_command_list(command)
print(f"Submitting job array with following {len(command_list)} expts")
for com in command_list:
    print(com)
print("-------------------------------------------")

executor = submitit.AutoExecutor(folder=".submitit_logs")
executor.update_parameters(timeout_min=time, slurm_partition=partition,
        slurm_gres="gpu:1")

jobs = []
with executor.batch():
    for command in command_list:
        job = executor.submit(os.system, command)
        jobs.append(job)

outputs = [job.result() for job in jobs]
errors = [job.stderr() for job in jobs]
logs = [job.stdout() for job in jobs]
print("Job output: \n")
print(logs[0])
print("Job error: \n")
print(errors[0])
